{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Task Pro API",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json", "multipart/form-data"],
  "servers": [
    { "url": "http://localhost:8682/api" },
    { "url": "https://task-pro-api.onrender.com/api" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users service endpoints"
    },
    {
      "name": "Boards",
      "description": "Boards service endpoints"
    },
    {
      "name": "Columns",
      "description": "Columns service endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks service endpoints"
    },
    {
      "name": "Email",
      "description": "Email service endpoints"
    },
    {
      "name": "Backgrounds",
      "description": "Backgrounds service endpoints"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success register",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Login object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": { "description": "Email or password is wrong", "content": {} },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": { "description": "Server error", "content": {} }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": { "description": "Server error", "content": {} }
        }
      }
    },
    "/users/current/{userId}": {
      "put": {
        "tags": ["Users"],
        "summary": "Edits user profile",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "User id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User profile object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ProfileEditRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Profile edits success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "409": {
            "description": "Email already used",
            "content": {}
          },
          "500": { "description": "Server error", "content": {} }
        }
      }
    },
    "/users/current/{userId}/theme": {
      "patch": {
        "tags": ["Users"],
        "summary": "Edit user theme",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "description": "User id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Theme object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThemeEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Theme edits success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeEditResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or not valid id",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": { "description": "Server error", "content": {} }
        }
      }
    },
    "/boards/": {
      "get": {
        "tags": ["Boards"],
        "summary": "Get all board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "All boards found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "post": {
        "tags": ["Boards"],
        "summary": "Add board",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add board object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddBoardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Board add success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "409": {
            "description": "A board with that name already exists",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },

    "/boards/{boardId}": {
      "put": {
        "tags": ["Boards"],
        "summary": "Edit board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Edit board object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Board edit success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Boards"],
        "summary": "Delete board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Board deleted success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Boards"],
        "summary": "Get board by id",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Board found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBoardByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/boards/{boardId}/active": {
      "patch": {
        "tags": ["Boards"],
        "summary": "Update active board",
        "parameters": [
          {
            "in": "path",
            "name": "boardId",
            "required": true,
            "type": "string",
            "description": "Board id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update active board",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActiveBoardRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Active board update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateActiveBoardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/columns/": {
      "post": {
        "tags": ["Columns"],
        "summary": "Add column",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": { "description": "Unauthorized", "content": {} },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/columns/{columnId}": {
      "get": {
        "tags": ["Columns"],
        "summary": "Get column by id",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Column id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Get column success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetColumnByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": { "description": "Unauthorized", "content": {} },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Columns"],
        "summary": "Delete column",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Column id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Column deleted success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Columns"],
        "summary": "Edit column",
        "parameters": [
          {
            "in": "path",
            "name": "columnId",
            "required": true,
            "type": "string",
            "description": "Column id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Edit column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Column edit success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/tasks/": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Add task",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": { "description": "Unauthorized", "content": {} },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get task by id",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Get task success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTaskByIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": { "description": "Unauthorized", "content": {} },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Task deleted success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Edit task",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Edit task object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task edit success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditTaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Tasks"],
        "summary": "Edit task column",
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "type": "string",
            "description": "Task id"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Edit task column object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditTaskColumnRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task edit column success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditTaskColumnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or id is not valid",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/email/": {
      "post": {
        "tags": ["Email"],
        "summary": "Send help message",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Send help message",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success send help message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": { "description": "Unauthorized", "content": {} },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/backgrounds/": {
      "get": {
        "tags": ["Backgrounds"],
        "summary": "Get backgrounds",
        "parameters": [],
        "security": [],
        "responses": {
          "200": {
            "description": "Backgrounds find",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBackgroundsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Successful user registration",
                "example": "User added"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 201,
          "data": { "message": "User added" }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "User id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Bubbu Smith"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "avatar": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://i.ibb.co/7VFWmkN/user2x-min.png"
                  },
                  "theme": {
                    "type": "string",
                    "description": "User theme",
                    "enum": ["dark", "light", "violet"],
                    "example": "dark"
                  }
                }
              },
              "token": {
                "type": "string",
                "description": "User token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgxYjZhMTZiNGQxYTNlNzk5OTNlZiIsImlhdCI6MTY4Nzc4MzY3MywiZXhwIjoxNjg3ODY2NDczfQ.KKh43mw_3mhnQJFGML8T4vhpNeWp8xJfuR9y1VWyQyg"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "user": {
              "_id": "64981b6a16b4d1a3e79993ef",
              "name": "Bubbu Smith",
              "email": "tum5325@i.com",
              "avatarUrl": "https://i.ibb.co/7VFWmkN/user2x-min.png",
              "theme": "dark"
            },
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgxYjZhMTZiNGQxYTNlNzk5OTNlZiIsImlhdCI6MTY4Nzc4MzY3MywiZXhwIjoxNjg3ODY2NDczfQ.KKh43mw_3mhnQJFGML8T4vhpNeWp8xJfuR9y1VWyQyg"
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "description": "User token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgxYjZhMTZiNGQxYTNlNzk5OTNlZiIsImlhdCI6MTY4Nzc4MzY3MywiZXhwIjoxNjg3ODY2NDczfQ.KKh43mw_3mhnQJFGML8T4vhpNeWp8xJfuR9y1VWyQyg"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0OTgxYjZhMTZiNGQxYTNlNzk5OTNlZiIsImlhdCI6MTY4Nzc4MzY3MywiZXhwIjoxNjg3ODY2NDczfQ.KKh43mw_3mhnQJFGML8T4vhpNeWp8xJfuR9y1VWyQyg"
          }
        }
      },
      "ThemeEditRequest": {
        "type": "object",
        "required": ["theme"],
        "properties": {
          "theme": {
            "type": "string",
            "description": "User theme",
            "enum": ["dark", "light", "violet"],
            "example": "dark"
          }
        }
      },
      "ThemeEditResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "format": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "theme": {
                "type": "string",
                "description": "Successful theme edit",
                "example": "light"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "theme": "light"
          }
        }
      },
      "ProfileEditRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "avatar": {
            "type": "string",
            "description": "User's avatar",
            "example": "qwerty123"
          }
        }
      },
      "ProfileEditResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "format": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "User id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name",
                    "example": "Freddy Kruger"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email",
                    "format": "email"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "description": "User avatar",
                    "example": "https://i.ibb.co/7VFWmkN/user2x-min.png"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "user": {
              "_id": "64981b6a16b4d1a3e79993ef",
              "name": "Freddy Kruger",
              "email": "tum5325@i.com",
              "avatarUrl": "https://i.ibb.co/7VFWmkN/user2x-min.png"
            }
          }
        }
      },
      "AddBoardRequest": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title"
          },
          "icon": {
            "type": "string",
            "description": "Board icon",
            "example": "icon.svg"
          },
          "background": {
            "type": "string",
            "description": "Board background",
            "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg"
          }
        }
      },
      "AddBoardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "board": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Board id",
                    "example": "649a97a2c1be193710fd1607"
                  },
                  "title": {
                    "type": "string",
                    "description": "Board title"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Board icon",
                    "example": "icon.svg"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Active board",
                    "example": false
                  },
                  "background": {
                    "type": "string",
                    "description": "Board background",
                    "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 201,
          "data": {
            "board": {
              "title": "My work",
              "background": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg",
              "icon": "",
              "active": false,
              "owner": "64981b6a16b4d1a3e79993ef",
              "_id": "649a97a2c1be193710fd1607"
            }
          }
        }
      },
      "DeleteBoardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Board removal notice",
                "example": "board deleted"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "message": "board deleted"
          }
        }
      },
      "EditBoardRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "Board title"
          },
          "icon": {
            "type": "string",
            "description": "Board icon",
            "example": "icon.svg"
          },
          "background": {
            "type": "string",
            "description": "Board background",
            "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg"
          }
        }
      },
      "EditBoardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "board": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Board id",
                    "example": "649a97a2c1be193710fd1607"
                  },
                  "title": {
                    "type": "string",
                    "description": "Board title"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Board icon",
                    "example": "icon.svg"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Active board",
                    "example": false
                  },
                  "background": {
                    "type": "string",
                    "description": "Board background",
                    "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Board owner",
                    "example": "64981b6b16b4d1a3e79993ef"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "board": {
              "title": "My work",
              "background": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg",
              "icon": "",
              "active": false,
              "owner": "64981b6a16b4d1a3e79993ef",
              "_id": "649a97a2c1be193710fd1607"
            }
          }
        }
      },
      "GetBoardByIdResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "board": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Board id",
                    "example": "649a97a2c1be193710fd1607"
                  },
                  "title": {
                    "type": "string",
                    "description": "Board title"
                  },
                  "icon": {
                    "type": "string",
                    "description": "Board icon",
                    "example": "icon.svg"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Active board",
                    "example": false
                  },
                  "background": {
                    "type": "string",
                    "description": "Board background",
                    "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg"
                  },
                  "owner": {
                    "type": "string",
                    "description": "Board owner id",
                    "example": "64981b6a16b4d1a3e79993ef"
                  },
                  "column": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Column id",
                          "example": "649a97a2c1be193710fd1607"
                        },
                        "title": {
                          "type": "string",
                          "description": "Column title"
                        },
                        "tasks": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Task id",
                                "example": "649a97a2c1be193710fd1607"
                              },
                              "title": {
                                "type": "string",
                                "description": "Task title"
                              },
                              "description": {
                                "type": "string",
                                "description": "Task description"
                              },
                              "priority": {
                                "type": "string",

                                "description": "Task priority",
                                "enum": [
                                  "without priority",
                                  "low",
                                  "medium",
                                  "high"
                                ],
                                "example": "low"
                              },
                              "deadline": {
                                "type": "string",
                                "description": "Task deadline",
                                "example": "27/06/2023"
                              },
                              "column": {
                                "type": "string",
                                "description": "Task owner column id",
                                "example": "649a97a2c1be193710fd1607"
                              },
                              "owner": {
                                "type": "string",
                                "description": "Task owner id",
                                "example": "649a97a2c1be193710fd1607"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "board": {
              "_id": "6495bef6d7f939c64a2849d4",
              "title": "Kukaracha",
              "background": "",
              "icon": "",
              "active": false,
              "owner": "6495bbfac50468f0fb4f6dee",
              "columns": [
                {
                  "_id": "6496c570425583d7d0c94c56",
                  "title": "Back in",
                  "board": "6496c570425583d7d0c94c56",
                  "tasks": [
                    {
                      "_id": "6496c700ec26574142eafbe1",
                      "title": "GGGGGGGG",
                      "description": "",
                      "priority": "low",
                      "owner": "6496c570425583d7d0c94c56",
                      "deadline": "27/06/2023",
                      "column": "6496c570425583d7d0c94c56"
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "GetBoardsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "boards": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Board id",
                      "example": "649a97a2c1be193710fd1607"
                    },
                    "title": {
                      "type": "string",
                      "description": "Board title"
                    },
                    "icon": {
                      "type": "string",
                      "description": "Board icon",
                      "example": "icon.svg"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Active board",
                      "example": false
                    },
                    "background": {
                      "type": "string",
                      "description": "Board background",
                      "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg"
                    },
                    "owner": {
                      "type": "string",
                      "description": "Board owner id",
                      "example": "64981b6a16b4d1a3e79993ef"
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "boards": [
              {
                "_id": "6495bef6d7f939c64a2849d4",
                "title": "Kukaracha",
                "background": "",
                "icon": "",
                "active": false,
                "owner": "6495bbfac50468f0fb4f6dee"
              }
            ]
          }
        }
      },

      "UpdateActiveBoardRequest": {
        "type": "object",
        "required": ["active"],
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Is board active",
            "example": true
          }
        }
      },
      "UpdateActiveBoardResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "board": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Board id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "active": {
                    "type": "boolean",
                    "description": "Active board",
                    "example": false
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "board": {
              "_id": "649a97a2c1be193710fd1607",
              "active": false
            }
          }
        }
      },
      "AddColumnRequest": {
        "type": "object",
        "required": ["title", "board"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "To do"
          },
          "board": {
            "type": "string",
            "description": "Column board id",
            "example": "To do"
          }
        }
      },
      "AddColumnResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "column": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Column id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "title": {
                    "type": "string",
                    "description": "Column title",
                    "example": "To do"
                  },
                  "board": {
                    "type": "string",
                    "description": "Column board id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 201,
          "data": {
            "column": {
              "title": "toDo",
              "board": "649bf0a328674965ca73b0b9",
              "_id": "649bf3b1f922805e943a9061",
              "createdAt": "2023-06-28T08:47:45.292Z",
              "updatedAt": "2023-06-28T08:47:45.292Z"
            }
          }
        }
      },
      "GetColumnByIdResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "column": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Column id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "title": {
                    "type": "string",
                    "description": "Column title",
                    "example": "To do"
                  },
                  "board": {
                    "type": "string",
                    "description": "Column board id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "column": {
              "title": "toDo",
              "board": "649bf0a328674965ca73b0b9",
              "_id": "649bf3b1f922805e943a9061"
            }
          }
        }
      },
      "DeleteColumnResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Delete message",
                "example": "Column deleted"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "message": "Column deleted"
          }
        }
      },
      "EditColumnRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "Column title",
            "example": "To do"
          }
        }
      },
      "EditColumnResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "column": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Column id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "title": {
                    "type": "string",
                    "description": "Column title",
                    "example": "To do"
                  },
                  "board": {
                    "type": "string",
                    "description": "Column board id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "column": {
              "title": "toDo",
              "board": "649bf0a328674965ca73b0b9",
              "_id": "649bf3b1f922805e943a9061"
            }
          }
        }
      },
      "AddTaskRequest": {
        "type": "object",
        "required": ["title", "deadline", "column", "index"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Help me"
          },
          "description": {
            "type": "string",
            "description": "Column description"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "enum": ["without priority", "low", "medium", "high"],
            "example": "without priority"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "20/07/2023"
          },
          "column": {
            "type": "string",
            "description": "Task column id",
            "example": "649bf3b1f922805e943a9061"
          },
          "index": {
            "type": "number",
            "description": "Task index",
            "example": 1
          }
        }
      },
      "AddTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 201
          },
          "data": {
            "type": "object",
            "properties": {
              "task": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Task id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Help me"
                  },
                  "description": {
                    "type": "string",
                    "description": "Column description"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Task priority",
                    "enum": ["without priority", "low", "medium", "high"],
                    "example": "without priority"
                  },
                  "deadline": {
                    "type": "string",
                    "description": "Task deadline",
                    "example": "20/07/2023"
                  },
                  "column": {
                    "type": "string",
                    "description": "Task column id",
                    "example": "649bf3b1f922805e943a9061"
                  },
                  "index": {
                    "type": "number",
                    "description": "Task index",
                    "example": 1
                  },
                  "owner": {
                    "type": "string",
                    "description": "Task owner id",
                    "example": "649bf3b1f922805e943a9061"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "task": {
              "title": "Help me",
              "description": "",
              "priority": "without priority",
              "deadline": "20/07/2023",
              "column": "649bf452a556957f7c3bad13",
              "owner": "649be03cb01628d96809da7f",
              "index": 1,
              "_id": "649bff2f20c0dbd0134ccbcb",
              "createdAt": "2023-06-28T09:36:47.024Z",
              "updatedAt": "2023-06-28T09:36:47.024Z"
            }
          }
        }
      },
      "GetTaskByIdResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "task": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Task id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Help me"
                  },
                  "description": {
                    "type": "string",
                    "description": "Column description"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Task priority",
                    "enum": ["without priority", "low", "medium", "high"],
                    "example": "without priority"
                  },
                  "deadline": {
                    "type": "string",
                    "description": "Task deadline",
                    "example": "20/07/2023"
                  },
                  "column": {
                    "type": "string",
                    "description": "Task column id",
                    "example": "649bf3b1f922805e943a9061"
                  },
                  "index": {
                    "type": "number",
                    "description": "Task index",
                    "example": 1
                  },
                  "owner": {
                    "type": "string",
                    "description": "Task owner id",
                    "example": "649bf3b1f922805e943a9061"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "task": {
              "_id": "649bff2f20c0dbd0134ccbcb",
              "title": "Help me",
              "description": "",
              "priority": "without priority",
              "deadline": "20/07/2023",
              "column": "649bf452a556957f7c3bad13",
              "owner": "649be03cb01628d96809da7f",
              "index": 1
            }
          }
        }
      },
      "DeleteTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "Delete message",
                "example": "Task deleted"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "message": "Task deleted"
          }
        }
      },
      "EditTaskRequest": {
        "type": "object",
        "required": [],
        "properties": {
          "title": {
            "type": "string",
            "description": "Task title",
            "example": "Help me"
          },
          "description": {
            "type": "string",
            "description": "Column description"
          },
          "priority": {
            "type": "string",
            "description": "Task priority",
            "enum": ["without priority", "low", "medium", "high"],
            "example": "without priority"
          },
          "deadline": {
            "type": "string",
            "description": "Task deadline",
            "example": "20/07/2023"
          }
        }
      },
      "EditTaskResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "task": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Task id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },
                  "title": {
                    "type": "string",
                    "description": "Task title",
                    "example": "Help me"
                  },
                  "description": {
                    "type": "string",
                    "description": "Column description"
                  },
                  "priority": {
                    "type": "string",
                    "description": "Task priority",
                    "enum": ["without priority", "low", "medium", "high"],
                    "example": "without priority"
                  },
                  "deadline": {
                    "type": "string",
                    "description": "Task deadline",
                    "example": "20/07/2023"
                  },
                  "column": {
                    "type": "string",
                    "description": "Task column id",
                    "example": "649bf3b1f922805e943a9061"
                  },
                  "index": {
                    "type": "number",
                    "description": "Task index",
                    "example": 1
                  },
                  "owner": {
                    "type": "string",
                    "description": "Task owner id",
                    "example": "649bf3b1f922805e943a9061"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "task": {
              "_id": "649bff2f20c0dbd0134ccbcb",
              "title": "Help me please dude",
              "description": "",
              "priority": "without priority",
              "deadline": "20/07/2023",
              "column": "649bf452a556957f7c3bad13",
              "owner": "649be03cb01628d96809da7f",
              "index": 1
            }
          }
        }
      },
      "EditTaskColumnRequest": {
        "type": "object",
        "required": ["column", "index"],
        "properties": {
          "column": {
            "type": "string",
            "description": "Task column id",
            "example": "649bf3b1f922805e943a9061"
          },
          "index": {
            "type": "number",
            "description": "Task index",
            "example": 1
          }
        }
      },
      "EditTaskColumnResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "task": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "Task id",
                    "example": "64981b6b16b4d1a3e79993ef"
                  },

                  "column": {
                    "type": "string",
                    "description": "Task column id",
                    "example": "649bf3b1f922805e943a9061"
                  },
                  "index": {
                    "type": "number",
                    "description": "Task index",
                    "example": 1
                  },
                  "owner": {
                    "type": "string",
                    "description": "Task owner id",
                    "example": "649bf3b1f922805e943a9061"
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "task": {
              "_id": "649bff2f20c0dbd0134ccbcb",
              "column": "649bf452a556957f7c3bad13",
              "owner": "649be03cb01628d96809da7f",
              "index": 1
            }
          }
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "required": ["email", "message"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email"
          },
          "message": {
            "type": "string",
            "description": "User message"
          }
        }
      },
      "SendMessageResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "description": "request message",
                "example": "message send successful"
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "message": "message send successful"
          }
        }
      },
      "GetBackgroundsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Response status",
            "example": "success"
          },
          "code": {
            "type": "number",
            "description": "Response code",
            "example": 200
          },
          "data": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "Backgrounds id",
                "example": "649a97a2c1be193710fd1607"
              },
              "backgrounds": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Desktop backgrounds name",
                      "example": "abstraction"
                    },
                    "desktop": {
                      "type": "object",
                      "properties": {
                        "link-1x": {
                          "type": "string",
                          "description": "Desktop backgrounds for 1x image",
                          "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg"
                        },
                        "link-2x": {
                          "type": "string",
                          "description": "Desktop backgrounds for 2x image",
                          "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438253/backgrounds/desktop-abstraction%402x.jpg"
                        }
                      }
                    },
                    "tablet": {
                      "type": "object",
                      "properties": {
                        "link-1x": {
                          "type": "string",
                          "description": "Tablet backgrounds link for 1x image",
                          "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/tablet-abstraction%401x.jpg"
                        },
                        "link-2x": {
                          "type": "string",
                          "description": "Tablet backgrounds link for 2x image",
                          "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438253/backgrounds/tablet-abstraction%402x.jpg"
                        }
                      }
                    },
                    "mobile": {
                      "type": "object",
                      "properties": {
                        "link-1x": {
                          "type": "string",
                          "description": "Mobile backgrounds link for 1x image",
                          "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/mobile-abstraction%401x.jpg"
                        },
                        "link-2x": {
                          "type": "string",
                          "description": "Mobile backgrounds link for 2x image",
                          "example": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438253/backgrounds/mobile-abstraction%402x.jpg"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },

        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "_id": "649c11398b5e1ead688f362b",
            "backgrounds": [
              {
                "name": "abstraction",
                "desktop": {
                  "link-1x": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/desktop-abstraction%401x.jpg",
                  "link-2x": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438253/backgrounds/desktop-abstraction%402x.jpg"
                },
                "tablet": {
                  "link-1x": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/tablet-abstraction%401x.jpg",
                  "link-2x": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438253/backgrounds/tablet-abstraction%402x.jpg"
                },
                "mobile": {
                  "link-1x": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438249/backgrounds/mobile-abstraction%401x.jpg",
                  "link-2x": "https://res.cloudinary.com/dzvwikezm/image/upload/v1687438253/backgrounds/mobile-abstraction%402x.jpg"
                }
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
